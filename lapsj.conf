#!/bin/bash
#---------------------------------------------------------------------------
# lapsj - madman's Linux, Apache, PostgreSQL, Samba, & Java Box
#---------------------------------------------------------------------------

# Desired dotfiles
DOTFILES_REPO_URL=https://github.com/genebarker/dotfiles.git

# SSH port to listen on
SSH_PORT=4422

# User & public key for SSH access
NON_ADMIN_USERNAME=eugene
NON_ADMIN_AUTH_KEY="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDIYVgRu4diE1Q+M10/nYIpJCUmZ6U/3h/PcXJxiQVYDhzWnUhm/y7TbqvlsN2ybmwf6RtCyE6Wq6Y6lrrRTSlsPp6FI/3435rZJPIl7AFTzR29YTtSxcMnu1/+B5xgMJg6W24oKlhUQrghzC0jbFvoXohNfEsv+w9ei6f4Gj9Dhxct/hTbbSTQPlMKW+qJsGv7rSp44AknX6K0LKobhXw+64ka+mGaCmvFPQd6vbxmU2ZULGqQKn8xukZ/tXhFgGbZ9krguNWe2GNxFURyS1liwsZWz/Vf0G2ZZik23xwGNGrlQ5dy4LySblvJOg/PvPwpRc3eoYAJsH1D8p/OeAQYuoViUnBc+29qljaXryuldt6BGCCLaE3Va7jcSdAj1s2hEER2P0oMj+WHMVpyCYKHdrpzAGOC94zX/B+4giP29Mhy7M0+btBOVBWnI5luEOnsO0XJIVQyS4IM9c9+xDnZnTyMgrgeAziBJQvYlEfnS7C1Y5PO9ntSu1dHNHppLiU= eugenebarker@eugene-mbp16.local"

#---
# Box customization
#---
PKG_NAME=mvm

PKG_GROUP="${PKG_NAME}admin"
PKG_ROOT_USER="${PKG_NAME}root"
SAMBA_GROUP="${PKG_NAME}share"
SAMBA_USER="${PKG_NAME}assist"

PKG_DIR_CONFIG="/etc/opt/${PKG_NAME}"
PKG_DIR_EXEC="/opt/${PKG_NAME}"
PKG_DIR_DATA="/var/opt/${PKG_NAME}"
PKG_DIR_BACKUPS="${PKG_DIR_DATA}/backups"
PKG_DIR_RESTORE="${PKG_DIR_DATA}/restore"

# Box customization script
configure_box () {
    add_admin_group_and_system_user
    create_system_folders
    install_and_configure_samba_shares
}

add_admin_group_and_system_user () {
    if [ ! $(getent group $PKG_GROUP) ]
    then
        groupadd -r $PKG_GROUP
    fi
    echo ".. group (${PKG_GROUP}) added to support appliance admin functions"

    if [ ! $(getent passwd $PKG_ROOT_USER) ]
    then
        useradd -r $PKG_ROOT_USER -g $PKG_GROUP
    fi
    echo ".. system user (${PKG_ROOT_USER}) added to execute appliance jobs"
}

create_system_folders () {
    echo ".. creating system folders"
    create_dir_and_set_owner $PKG_DIR_CONFIG $PKG_ROOT_USER $PKG_GROUP
    create_dir_and_set_owner $PKG_DIR_EXEC $PKG_ROOT_USER $PKG_GROUP
    create_dir_and_set_owner $PKG_DIR_DATA $PKG_ROOT_USER $PKG_GROUP
    create_dir_and_set_owner $PKG_DIR_BACKUPS $PKG_ROOT_USER $PKG_GROUP
    create_dir_and_set_owner $PKG_DIR_RESTORE $PKG_ROOT_USER $PKG_GROUP
}

# $1: path
# $2: owner (optional)
# $3: group (optional, requires owner)
create_dir_and_set_owner()
{
    mkdir -p $1
    echo ".. created directory ($1)"

    if [ -z "$2" ] || [ -z "$3" ]
    then
        return # no owner & group
    fi

    chown -R $2:$3 $1
    echo ".. set owner and group ($2:$3)"
}

install_and_configure_samba_shares()
{
    echo ".. installing samba"
    apt-get -y install samba smbclient

    if [ ! $(getent group $SAMBA_GROUP) ]
    then
        groupadd -r $SAMBA_GROUP
    fi
    echo ".. group (${SAMBA_GROUP}) added to support Samba file shares"

    if [ ! $(getent passwd $SAMBA_USER) ]
    then
        useradd -r $SAMBA_USER -g $SAMBA_GROUP
    fi
    echo ".. system user (${SAMBA_USER}) added to support Samba user with same name"
    echo ".. please provide a password for this user (${SAMBA_USER})"
    passwd $SAMBA_USER

    echo ".. configuring samba"
    if [ ! -f /etc/samba/smb.conf.orig ]
    then
        # save original
        cp -n /etc/samba/smb.conf /etc/samba/smb.conf.orig
    fi
    cat <<EOT >/etc/samba/smb.conf
[global]
    log file = /var/log/samba/%m
    server role = standalone server

[backups]
    inherit permissions = yes
    path = $PKG_DIR_BACKUPS
    valid users = @$PKG_GROUP, @$SAMBA_GROUP

[restore]
    inherit permissions = yes
    path = $PKG_DIR_RESTORE
    read only = no
    valid users = @$PKG_GROUP
EOT

}
